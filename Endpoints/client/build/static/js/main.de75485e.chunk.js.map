{"version":3,"sources":["historial.js","server_data.js","icons/satellite.svg","pages/Login.js","icons/folder.svg","components/Message.js","components/UserStatus.js","types/Transmiter.js","imgs/Untitled-1.png","icons/paper-plane.svg","pages/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","server_name","LoginPage","props","getRandomColor","letters","color","i","Math","floor","random","length","id","onKeyDown","e","key","toLowerCase","user_name","document","getElementById","value","forma","FormData","append","request","Request","method","body","fetch","then","promise","json","response","userIdCallback","browser_history","push","loginUser","type","placeholder","data","loginLogo","Message","class_name","message_data","sender","is_control_message","is_file","download_callback","isImageFile","test","className","onClick","style","console","log","image_url","src","alt","fileIcon","getMessageBody","UserLabel","user_data","status","Trainsmiter","isConnected","connect","host","disconnection_callback","socket","WebSocket","onopen","onConnect","onmessage","onMessage","onclose","onDisconnect","setDisconnectionCallback","callback","is_connected","setConnectionCallback","connection_callback","undefined","Close","close","message_event","message_callback","setMessageCallback","onError","error_callback","emit","message","send","warn","this","ChatRoom","getUserFile","click","getStatusElement","status_class","state","logged","toggleLogin","is_logged","setState","isMessageDone","messager","transmisor","uploadFile","file","files","name","user_id","updateMessages","messages","json_message","JSON","parse","window","setTimeout","requestUsers","scrollToBottom","chat_element","scrollTop","scrollHeight","downloadFileCallback","file_name","file_url","blob","file_blob","blob_url","URL","createObjectURL","download_element","createElement","href","download","remove","users","requestMessagesHistory","api_url","location","Transmisor","telefakeLogo","map","usr","h","m","uuid","maxLength","sendMsgLogo","onChange","Component","ChatError","Error","App","useRef","updateUserId","new_id","current","getUserId","history","browserHistory","exact","path","render","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"iSAEeA,gBCFFC,EAAc,sBCAZ,MAA0B,sCCuD1BC,G,MAjDG,SAAAC,GAEd,IAmBMC,EAAiB,WAGnB,IAFA,IAAIC,EAAU,mBACVC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAASD,EAAQG,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,SAEtD,OAAOL,GASX,OACI,qBAAKM,GAAG,uBAAR,SACI,sBAAKA,GAAG,kBAAR,UACI,oBAAIA,GAAG,cAAP,gCACA,sBAAKA,GAAG,wBAAR,UACI,uBAAOC,UAXA,SAAAC,GACS,UAAxBA,EAAEC,IAAIC,eA7BI,WACd,IAAMC,EAAYC,SAASC,eAAe,eAAeC,MACzD,GAAkB,KAAdH,EAAkB,CAClB,IAAMI,EAAQ,IAAIC,SAClBD,EAAME,OAAO,YAAaN,GAC1BI,EAAME,OAAO,QAASnB,KAEtB,IAAMoB,EAAU,IAAIC,QAAJ,UAAexB,EAAf,kBAA4C,CAACyB,OAAQ,OAAQC,KAAMN,IACnFO,MAAMJ,GACDK,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACwB,QAAtBA,EAASA,WACT7B,EAAM8B,eAAeD,EAASA,UAC9BE,EAAgBC,KAAK,QAAS,CAAC,UAAalB,SAiBxDmB,IAS0CC,KAAK,OAAOzB,GAAG,cAAc0B,YAAY,2BAC3E,wBAAQ1B,GAAG,cAAcyB,KAAK,gBAAgBE,KAAMC,EAApD,6B,QChDL,MAA0B,mCC+D1BC,G,MA1DC,SAAAtC,GAAU,IAChBuC,EAAevC,EAAfuC,WADe,EAOjBvC,EAAMwC,aALFC,EAFa,EAEbA,OACAjB,EAHa,EAGbA,KACAkB,EAJa,EAIbA,mBACAvC,EALa,EAKbA,MACAwC,EANa,EAMbA,QAEAC,EAAsB5C,EAAtB4C,kBAERL,EAAaG,EAAkB,UAAMH,EAAN,oBAAqCA,EAEpE,IAQMM,EAAc,iBAAM,qBAAqBC,KAAKtB,IAASmB,GAyB7D,OACI,qBAAKI,UAAU,YAAf,SACI,sBAAKC,QAASL,EAAUC,EAAoB,kBAAM,GAAMG,UAAS,4BAAuBR,GAAxF,UACI,qBAAKU,MAAO,CAAC9C,MAAOA,GAAQ4C,UAAU,aAAtC,SACI,sBAAMA,UAAU,cAAhB,SAA+BN,MA3BxB,WAEnB,GADAS,QAAQC,IAAR,UAAe3B,EAAf,aAAwBqB,MACrBA,IAAe,CACd,IAAIO,EAAS,UAAMtD,EAAN,mBAA4B0B,GACzC,OACI,qBAAKuB,UAAU,YAAf,SACI,qBAAKM,IAAKD,EAAWE,IAAKF,MAIlC,OACI,sBAAKL,UAAU,eAAf,UACI,qBAAKA,UAAS,mBAAcJ,EAAU,eAAiB,IAAvD,SACKnB,IAEL,qBAAKuB,UAAU,WAAf,SAxBRJ,EACO,wBAAQP,KAAMmB,EAAUrB,KAAK,gBAA7B,kBAEA,UAmCFsB,UC3CFC,G,MAVG,SAAAzD,GAAU,IAAD,EACaA,EAAM0D,UAAnCvD,EADgB,EAChBA,MAAOW,EADS,EACTA,UAAW6C,EADF,EACEA,OACzB,OACI,sBAAKZ,UAAU,cAAf,UACI,qBAAKE,MAAO,CAAC9C,MAAOA,GAAQ4C,UAAU,kBAAtC,SAAyDjC,IACzD,qBAAKiC,UAAS,oBAAeY,EAAS,SAAW,WAAjD,oBCuEGC,EArEX,aAAe,IAAD,gCAWdC,YAAc,kBAAsB,IAAhB,EAAKF,QAXX,KAadG,QAAU,SAACC,EAAMC,GACb,EAAKD,KAAOA,EACZ,EAAKE,OAAS,IAAIC,UAAUH,GAC5B,EAAKE,OAAOE,OAAS,EAAKC,UAC1B,EAAKH,OAAOI,UAAY,EAAKC,UAC7B,EAAKL,OAAOM,QAAU,EAAKC,cAlBjB,KAuBdC,yBAA2B,SAAAC,GAClB,EAAKC,eACN,EAAKX,uBAAyBU,IAzBxB,KA6BdE,sBAAwB,SAAAF,GACf,EAAKC,eACN,EAAKE,oBAAsBH,IA/BrB,KAmCdN,UAAY,SAAAzD,QACwBmE,IAA7B,EAAKD,qBACJ,EAAKA,oBAAoBlE,IArCnB,KAyCd6D,aAAe,SAAA7D,QACwBmE,IAAhC,EAAKd,wBACJ,EAAKA,uBAAuBrD,IA3CtB,KA+CdoE,MAAQ,kBAAM,EAAKd,OAAOe,MAAM,IAAM,oBA/CxB,KAiDdV,UAAY,SAAAW,QACsBH,IAA1B,EAAKI,kBACL,EAAKA,iBAAiBD,IAnDhB,KAuDdE,mBAAqB,SAAAT,GAAQ,OAAI,EAAKQ,iBAAmBR,GAvD3C,KAyDdU,QAAU,SAAAV,GAAQ,OAAI,EAAKW,eAAiBX,GAzD9B,KA2DdY,KAAO,SAAAC,GACAA,EAAQ/E,OAAS,EAChB,EAAKyD,OAAOuB,KAAKD,GAEjBrC,QAAQuC,KAAR,mBAAyBF,EAAzB,kBA9DJG,KAAK/B,OAAS,EACd+B,KAAK3B,KAAO,KACZ2B,KAAKf,cAAe,EACpBe,KAAKzB,OAAS,KACdyB,KAAK1B,4BAAyBc,EAC9BY,KAAKb,yBAAsBC,EAC3BY,KAAKR,sBAAmBJ,EACxBY,KAAKL,oBAAiBP,GClBf,MAA0B,uCCA1B,MAA0B,wCCsM1Ba,G,wDA5LX,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAsCV4F,YAAc,WACS7E,SAASC,eAAe,cAChC6E,SAzCI,EA4CnBC,iBAAmB,WACf,IAAIC,EAAe,EAAKC,MAAMC,OAAS,YAAc,eACrD,OACI,qBAAKlD,UAAS,uBAAkBgD,GAAhC,SACKA,KAhDM,EAqDnBG,YAAc,SAAAC,GACN,EAAKH,MAAMC,SAAWE,GACtB,EAAKC,SAAL,2BACO,EAAKJ,OADZ,IAEIC,OAAQE,MAzDD,EA8DnBE,cAAgB,SAAA1F,GACZ,GAA2B,UAAxBA,EAAEC,IAAIC,cAA2B,CAChC,IAAMyF,EAAWvF,SAASC,eAAe,oBACzC,EAAKuF,WAAWjB,KAAKgB,EAASrF,OAC9BqF,EAASrF,MAAQ,KAlEN,EAsEnBuF,WAAa,WACT,IAAMC,EAAO1F,SAASC,eAAe,cAAc0F,MAAM,GACzD,GAAGD,EAAM,CACL,IAAMvF,EAAQ,IAAIC,SAClBD,EAAME,OAAO,OAAQqF,GACrBvF,EAAME,OAAO,YAAaqF,EAAKE,MAC/BzF,EAAME,OAAO,YAAa,EAAK4E,MAAMY,SAErC,IAAMvF,EAAU,IAAIC,QAAJ,UAAexB,EAAf,cAAwC,CAACyB,OAAQ,OAAQC,KAAMN,IAC/EO,MAAMJ,GACDK,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACuB,QAAtBA,EAASA,UACRqB,QAAQuC,KAAK,wCAnFd,EAyFnBoB,eAAiB,SAAAtB,GAAY,IACjBuB,EAAa,EAAKd,MAAlBc,SACFC,EAAeC,KAAKC,MAAM1B,EAAQnD,MACrC2E,EAAarE,oBACZwE,OAAOC,WAAW,EAAKC,aAAc,KAEzCN,EAAS9E,KAAK+E,GACd,EAAKX,SAAL,2BACO,EAAKJ,OADZ,IAEIc,aACD,EAAKO,iBAnGO,EAsGnBA,eAAiB,WACb,IAAMC,EAAevG,SAASC,eAAe,2BAC7CsG,EAAaC,UAAYD,EAAaE,cAxGvB,EA2GnBC,qBAAuB,SAAAjF,GACnB,IAAMkF,EAAYlF,EAAahB,KAC3BmG,EAAQ,UAAM7H,EAAN,mBAA4B4H,GACxCjG,MAAMkG,GACDjG,MAAK,SAAAC,GAAO,OAAIA,EAAQiG,UACxBlG,MAAK,SAAAmG,GACF,IAAIC,EAAWZ,OAAOa,IAAIC,gBAAgBH,GACpCI,EAAmBlH,SAASmH,cAAc,KAChDD,EAAiBE,KAAOL,EACxBG,EAAiBG,SAAWV,EAC5BO,EAAiBpC,QACjBoC,EAAiBI,aAtHV,EA2HnBjB,aAAe,kBAAM3F,MAAM,GAAD,OAAI3B,EAAJ,eACG4B,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACF,EAAKuE,SAAL,2BACO,EAAKJ,OADZ,IAEIsC,MAAOzG,SAhIxB,EAoInB0G,uBAAyB,WACrB,IAAIC,EAAO,UAAM1I,EAAN,6BACX2B,MAAM+G,GACD9G,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACCA,EAASrB,OAAS,GACjB,EAAK4F,SAAL,2BACO,EAAKJ,OADZ,IAEIc,SAAUjF,SA1I1B,EAAK0E,gBAAazB,EAClB,EAAKhE,UAAYd,EAAMyI,SAASzC,MAAMlF,UACtC,EAAKkF,MAAQ,CACTY,QAAS,GACTX,QAAQ,EACRa,SAAU,GACVwB,MAAO,IARI,E,gEAaf,GAA2B,KAAvB5C,KAAKM,MAAMY,QAAgB,CAC3BlB,KAAK0B,eACL,IAAMR,EAAUlB,KAAK1F,MAAM8B,iBAC3B4D,KAAKU,SAAL,2BACOV,KAAKM,OADZ,IAEIY,YACDlB,KAAK6C,2B,2CASM,IAAD,YACMzD,IAApBY,KAAKa,YAA4Bb,KAAKM,MAAMY,QAAQpG,QAAU,KAC7DkF,KAAKa,WAAa,IAAImC,EACtBhD,KAAKa,WAAW3B,uBAAsB,kBAAM,EAAKsB,aAAY,MAC7DR,KAAKa,WAAW9B,0BAAyB,kBAAM,EAAKyB,aAAY,MAChER,KAAKa,WAAWpB,mBAAmBO,KAAKmB,gBACxCnB,KAAKa,WAAWzC,QAAhB,UT3Ca,0BS2Cb,sBAAkD4B,KAAK5E,WAAa,S,+BAgHlE,IAAD,SACuB4E,KAAKM,MAAzBc,EADH,EACGA,SAAUwB,EADb,EACaA,MAClB,OACI,sBAAK7H,GAAG,sBAAR,UACI,mCACI,qBAAKA,GAAG,YAAR,SAAoB,qBAAK4C,IAAKsF,EAAcrF,IAAI,mBAChD,qBAAI7C,GAAG,YAAP,sBAA6BiF,KAAK5E,aAClC,oBAAIL,GAAG,iBAAP,yBAEJ,uBAAMA,GAAG,kBAAT,UACI,0BAASA,GAAG,eAAZ,UACI,qBAAKA,GAAG,cAAR,sBACA,qBAAKA,GAAG,uBAAR,SACK6H,EAAMM,KAAI,SAACC,EAAKC,GACb,OAAID,EAAI/H,YAAc,EAAKA,UAChB,KAEJ,cAAC,EAAD,CAAsC4C,UAAWmF,GAAjD,eAAiCC,YAIpD,0BAASrI,GAAG,gBAAZ,UACI,qBAAKA,GAAG,0BAAR,SACKqG,EAAS8B,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAkBnG,kBAAmB,kBAAM,EAAK6E,qBAAqBsB,IAAiBxG,WAAawG,EAAEtG,SAAW,EAAK3B,UAAY,OAAS,WAAY0B,aAAcuG,GAAtFA,EAAEC,WAEvG,sBAAKvI,GAAG,kBAAR,UACI,uBAAOC,UAAWgF,KAAKW,cAAenE,KAAK,OAAOzB,GAAG,mBAAmBwI,UAAU,MAAM9G,YAAY,eACpG,qBAAKa,QAAS0C,KAAKE,YAAa7C,UAAU,qBAA1C,SACI,wBAAQ5C,MAAM,QAAQiC,KAAM8G,EAAahH,KAAK,gBAAgBzB,GAAG,yBAAjE,8BAKhB,yBAAQA,GAAG,aAAX,UACKiF,KAAKI,mBACN,qBAAK/C,UAAU,eAAf,SAA8B,uBAAOoG,SAAUzD,KAAKc,WAAY/F,GAAG,aAAayB,KAAK,qB,GAtLlFkH,cCHjBC,E,kDACF,WAAY9D,GAAU,IAAD,8BACjB,cAAMA,IACDoB,KAAO,YACZ,EAAKpB,QAAUA,EAHE,E,sBADD+D,QAiCTC,MAzBf,WACI,IAAM3C,EAAU4C,iBAAO,IAEjBC,EAAe,SAAAC,GACjB,GAAwB,KAApB9C,EAAQ+C,QACR/C,EAAQ+C,QAAUD,OACf,GAAGA,IAAW9C,EAAQ+C,QACzB,MAAM,IAAIN,EAAJ,kEAAyEzC,EAAQ+C,QAAjF,iBAAiGD,EAAjG,OAIRE,EAAY,kBAAMhD,EAAQ+C,SAEhC,OACI,qBAAK5G,UAAU,MAAf,SACI,cAAC,IAAD,CAAQ8G,QAASC,EAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAjK,GAAK,OAAI,cAACkK,EAAD,2BAAelK,GAAf,IAAsB8B,eAAgB2H,QAC7E,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,QAASC,OAAQ,SAAAjK,GAAK,OAAI,cAAC,EAAD,2BAAcA,GAAd,IAAqB8B,eAAgB8H,gBCpBtFO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3I,MAAK,YAAkD,IAA/C4I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEF7J,SAASC,eAAe,SAM1BmJ,M","file":"static/js/main.de75485e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","export const server_name = \"http://0.0.0.0:5000\";\nexport const ws_server = \"ws://0.0.0.0:5000/login\";\n","export default __webpack_public_path__ + \"static/media/satellite.78a72fb7.svg\";","import React from 'react';\nimport browser_history from '../historial'\nimport { server_name } from '../server_data'\nimport loginLogo from '../icons/satellite.svg';\nimport '../css/LoginPage.css';\n\nconst LoginPage = props => {\n\n    const loginUser = () => {\n        const user_name = document.getElementById(\"login-input\").value;\n        if (user_name !== \"\") {\n            const forma = new FormData();\n            forma.append('user_name', user_name);\n            forma.append('color', getRandomColor());\n\n            const request = new Request(`${server_name}/register-user`, {method: \"POST\", body: forma});\n            fetch(request)\n                .then(promise => promise.json())\n                .then(response => {\n                    if (response.response !== \"bad\") {\n                        props.userIdCallback(response.response);\n                        browser_history.push(\"/chat\", {\"user_name\": user_name});\n                    }\n                })\n            }\n    }\n\n    const getRandomColor = () => {\n        var letters = '0123456789ABCDEF';\n        var color = '#';\n        for (let i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * letters.length)];\n        }\n        return color;\n    }\n\n    const IsEnterPressed = e => {\n        if (e.key.toLowerCase() === \"enter\") {\n            loginUser()\n        }\n    }\n\n    return(\n        <div id=\"main-login-container\">\n            <div id=\"login-container\">\n                <h3 id=\"login-title\">Ingresa un usuario</h3>\n                <div id=\"login-input-container\">\n                    <input onKeyDown={IsEnterPressed} type=\"text\" id=\"login-input\" placeholder=\"CharlesDexterWard21...\"/>\n                    <object id=\"connect-btn\" type=\"image/svg+xml\" data={loginLogo}>error</object>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage;","export default __webpack_public_path__ + \"static/media/folder.5ac5f545.svg\";","import React from 'react';\nimport fileIcon from '../icons/folder.svg';\nimport '../css/Message.css';\nimport { server_name } from '../server_data';\n\nconst Message = props => {\n    let { class_name } = props;\n    const { sender,\n            body,\n            is_control_message,\n            color,\n            is_file,\n    } = props.message_data;\n    const { download_callback } = props;\n\n    class_name = is_control_message ? `${class_name} control-message` : class_name;\n\n    const getFileIcon = () => {\n        if (is_file) {\n            return <object data={fileIcon} type=\"image/svg+xml\">file</object>\n        } else {\n            return null;\n        }\n    }\n\n    const isImageFile = () => /.+\\.(jpg|png|gif)$/.test(body) && is_file;\n\n    const getMessageBody = () => {\n        console.log(`${body}: ${isImageFile()}`)\n        if(isImageFile()) {\n            let image_url = `${server_name}/static/${body}`;\n            return (\n                <div className=\"msg-image\">\n                    <img src={image_url} alt={image_url}/>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"message-body\">\n                    <div className={`msg-body ${is_file ? \"file_message\" : \"\"}`}>\n                        {body}\n                    </div>\n                    <div className=\"msg-icon\">\n                        {getFileIcon()}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    return(\n        <div className=\"msg-space\">\n            <div onClick={is_file ? download_callback : () => true} className={`message-container ${class_name}`}>\n                <div style={{color: color}} className=\"msg-header\">\n                    <span className=\"sender-name\">{sender}</span>\n                </div>\n                {getMessageBody()}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport \"../css/UserLabel.css\";\n\nconst UserLabel = props => {\n    const {color, user_name, status } = props.user_data;\n    return (\n        <div className=\"user-status\">\n            <div style={{color: color}} className=\"user-name-label\">{user_name}</div>\n            <div className={`us-status ${status ? \"online\" : \"offline\"}`}>*</div>\n        </div>\n    )\n}\n\nexport default UserLabel;","// class TrainsmiterException extends Error {\n//     constructor(message) {\n//         super(message)\n//         this.message = message\n//         this.name = \"TransmiterException\"\n//     }\n// }\n\nclass Trainsmiter {\n\n    constructor() {\n        this.status = 0;\n        this.host = null;\n        this.is_connected = false;\n        this.socket = null;\n        this.disconnection_callback = undefined;\n        this.connection_callback = undefined;\n        this.message_callback = undefined;\n        this.error_callback = undefined;\n    }\n\n    isConnected = () => this.status === 1 ? true : false;\n\n    connect = (host, disconnection_callback) => {\n        this.host = host;\n        this.socket = new WebSocket(host);\n        this.socket.onopen = this.onConnect;\n        this.socket.onmessage = this.onMessage;\n        this.socket.onclose = this.onDisconnect;\n    }\n\n\n\n    setDisconnectionCallback = callback => {\n        if (!this.is_connected) {\n            this.disconnection_callback = callback;\n        }\n    }\n\n    setConnectionCallback = callback => {\n        if (!this.is_connected) {\n            this.connection_callback = callback;\n        }\n    }\n\n    onConnect = e => {\n        if(this.connection_callback !== undefined) {\n            this.connection_callback(e);\n        }\n    }\n\n    onDisconnect = e => {\n        if(this.disconnection_callback !== undefined) {\n            this.disconnection_callback(e);\n        }\n    }\n\n    Close = () => this.socket.close(1000, \"User logged out\")\n\n    onMessage = message_event => {\n        if (this.message_callback !== undefined) {\n            this.message_callback(message_event)\n        } \n    }\n\n    setMessageCallback = callback => this.message_callback = callback;\n    \n    onError = callback => this.error_callback = callback;\n\n    emit = message => {\n        if(message.length > 0) {\n            this.socket.send(message);\n        } else {\n            console.warn(`Message '${message}' is invalid`);\n        }\n    }\n}\n\n\nexport default Trainsmiter;","export default __webpack_public_path__ + \"static/media/Untitled-1.6fdffd06.png\";","export default __webpack_public_path__ + \"static/media/paper-plane.8efd8a9b.svg\";","import React, { Component } from 'react';\nimport MessageComponent from '../components/Message';\nimport UserLabelComponent from '../components/UserStatus';\nimport Transmisor from '../types/Transmiter';\nimport telefakeLogo from './../imgs/Untitled-1.png';\nimport sendMsgLogo from './../icons/paper-plane.svg';\nimport { server_name, ws_server } from '../server_data';\nimport './../css/Chat.css';\n\nclass ChatRoom extends Component {\n    constructor(props) {\n        super(props);\n        this.transmisor = undefined;\n        this.user_name = props.location.state.user_name;\n        this.state = {\n            user_id: \"\",\n            logged: false,\n            messages: [],\n            users: []\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.user_id === \"\") {\n            this.requestUsers();\n            const user_id = this.props.userIdCallback();\n            this.setState({\n                ...this.state,\n                user_id\n            }, this.requestMessagesHistory);\n        }\n    }\n    \n\n    // componentWillUnmount() {\n    //     this.transmisor.Close();\n    // }\n\n    componentDidUpdate() {\n        if(this.transmisor === undefined && this.state.user_id.length >= 40) {\n            this.transmisor = new Transmisor();\n            this.transmisor.setConnectionCallback(() => this.toggleLogin(true));\n            this.transmisor.setDisconnectionCallback(() => this.toggleLogin(false));\n            this.transmisor.setMessageCallback(this.updateMessages);\n            this.transmisor.connect(`${ws_server}?user_name=${this.user_name}`, null);\n        }\n        \n    }\n\n    getUserFile = () => {\n        const file_input = document.getElementById(\"file-input\");\n        file_input.click()\n    }\n\n    getStatusElement = () => {\n        let status_class = this.state.logged ? 'connected' : 'disconnected';\n        return (\n            <div className={`status-entry ${status_class}`}>\n                {status_class}\n            </div>\n        )\n    }\n\n    toggleLogin = is_logged => {\n        if (this.state.logged !== is_logged) {\n            this.setState({\n                ...this.state,\n                logged: is_logged\n            })\n        }\n    }\n\n    isMessageDone = e => {\n        if(e.key.toLowerCase() === \"enter\") {\n            const messager = document.getElementById(\"transmisor-input\");\n            this.transmisor.emit(messager.value);\n            messager.value = \"\";\n        }\n    }\n\n    uploadFile = () => {\n        const file = document.getElementById(\"file-input\").files[0];\n        if(file) {\n            const forma = new FormData();\n            forma.append(\"file\", file);\n            forma.append(\"file_name\", file.name);\n            forma.append(\"user_uuid\", this.state.user_id);\n\n            const request = new Request(`${server_name}/send-file`, {method: \"POST\", body: forma});\n            fetch(request)\n                .then(promise => promise.json())\n                .then(response => {\n                    if(response.response === \"bad\") {\n                        console.warn(\"Server error while sending file\")\n                    }\n                })\n        }\n    }\n\n    updateMessages = message => {\n        const { messages } = this.state;\n        const json_message = JSON.parse(message.data);\n        if(json_message.is_control_message) {\n            window.setTimeout(this.requestUsers, 400);\n        }\n        messages.push(json_message);\n        this.setState({\n            ...this.state,\n            messages\n        }, this.scrollToBottom);\n    }\n\n    scrollToBottom = () => {\n        const chat_element = document.getElementById(\"chat-massages-container\");\n        chat_element.scrollTop = chat_element.scrollHeight;\n    }\n\n    downloadFileCallback = message_data => {\n        const file_name = message_data.body;\n        let file_url = `${server_name}/static/${file_name}`;\n        fetch(file_url)\n            .then(promise => promise.blob())\n            .then(file_blob => {\n                let blob_url = window.URL.createObjectURL(file_blob);\n                const download_element = document.createElement(\"a\");\n                download_element.href = blob_url;\n                download_element.download = file_name;\n                download_element.click();\n                download_element.remove();\n            })\n\n    }\n\n    requestUsers = () => fetch(`${server_name}/get-users`)\n                                .then(promise => promise.json())\n                                .then(response => {\n                                    this.setState({\n                                        ...this.state,\n                                        users: response\n                                    })\n                                });\n\n    requestMessagesHistory = () => {\n        let api_url = `${server_name}/retrive-messages-history`;\n        fetch(api_url)\n            .then(promise => promise.json())\n            .then(response => {\n                if(response.length > 0) {\n                    this.setState({\n                        ...this.state,\n                        messages: response\n                    });\n                }\n            })\n    }\n\n    render() {\n        const { messages, users } = this.state;\n        return(\n            <div id=\"chat-main-container\">\n                <header>\n                    <div id=\"chat-logo\"><img src={telefakeLogo} alt=\"telefake.png\" /></div>\n                    <h3 id=\"user-name\">Usuario: {this.user_name}</h3>\n                    <h3 id=\"telefake-label\">Telefake</h3>\n                </header>\n                <main id=\"central-display\">\n                    <section id=\"room-content\">\n                        <div id=\"room-header\">Usuarios</div>\n                        <div id=\"room-users-container\">\n                            {users.map((usr, h) => {\n                                if (usr.user_name === this.user_name) {\n                                    return null;\n                                }\n                                return <UserLabelComponent key={`user-${h}`} user_data={usr}/>;\n                            })}\n                        </div>\n                    </section>\n                    <section id=\"chat-messages\">\n                        <div id=\"chat-massages-container\">\n                            {messages.map(m => <MessageComponent download_callback={() => this.downloadFileCallback(m)} key={m.uuid} class_name={ m.sender === this.user_name ? \"sent\" : \"recivied\"} message_data={m}/>)}\n                        </div>\n                        <div id=\"chat-transmisor\">\n                            <input onKeyDown={this.isMessageDone} type=\"text\" id=\"transmisor-input\" maxLength=\"512\" placeholder=\"mensaje...\"/>\n                            <div onClick={this.getUserFile} className=\"circular-input-btn\">\n                                <object color=\"white\" data={sendMsgLogo} type=\"image/svg+xml\" id=\"circular-input-btn-svg\">error</object>\n                            </div>\n                        </div>\n                    </section>\n                </main>\n                <footer id=\"status-bar\">\n                    {this.getStatusElement()}\n                    <div className=\"status-entry\"><input onChange={this.uploadFile} id=\"file-input\" type=\"file\"/></div>\n                </footer>\n            </div>  \n        );\n    }\n}\n\nexport default ChatRoom;","import React, { useRef } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from './pages/Login';\nimport ChatRoom from './pages/Chat'\nimport browserHistory from './historial';\n\nclass ChatError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ChatError\";\n        this.message = message;\n    }\n}\n\nfunction App() {\n    const user_id = useRef(\"\");\n\n    const updateUserId = new_id => {\n        if (user_id.current === \"\") {\n            user_id.current = new_id;\n        } else if(new_id !== user_id.current){\n            throw new ChatError(`attempt to change a user_id which was already defined: '${user_id.current}' to '${new_id}'`);\n        }\n    }\n\n    const getUserId = () => user_id.current;\n\n    return(\n        <div className=\"App\">\n            <Router history={browserHistory}>\n                <Switch>\n                    <Route exact path=\"/\" render={props => <LoginPage {...props} userIdCallback={updateUserId} />}/>\n                    <Route exact path=\"/chat\"  render={props => <ChatRoom {...props} userIdCallback={getUserId} />}/>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}